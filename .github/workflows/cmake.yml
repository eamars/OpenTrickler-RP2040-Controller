name: Auto Release Build

run-name: Build based on ${{ github.ref }} by @${{ github.actor }}


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PICO_BOARD: pico_w

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0          # Fetch all branches and tags
        submodules: recursive   # Automatically pull all submodules
      
    - name: Install Build Dependencies
      run: | 
        sudo apt-get update
        sudo apt install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential libstdc++-arm-none-eabi-newlib python3

    - name: Build Release Package
      # Build your program with the given configuration

      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DPICO_BOARD=${{env.PICO_BOARD}}
        cmake --build ${{github.workspace}}/build --config Release

    - name: Archive Release Artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: uf2-release
        path: |
          src/generated/version.c
          build/*.uf2

    - name: Build Debug Package
      # Build your program with the given configuration

      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DPICO_BOARD=${{env.PICO_BOARD}}
        cmake --build ${{github.workspace}}/build --config Debug

    - name: Archive Debug Artifact
      uses: actions/upload-artifact@v3
      with: 
        name: uf2-debug
        path: |
          src/generated/version.c  
          build/*.bin
          build/*.dis
          build/*.elf
          build/*.map
          build/*.hex
          build/*.uf2

          